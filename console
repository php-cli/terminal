#!/usr/bin/env php
<?php

declare(strict_types=1);

require __DIR__ . '/vendor/autoload.php';

use Butschster\Commander\Application;
use Butschster\Commander\ExceptionRenderer;
use Butschster\Commander\Feature\CommandBrowser\Screen\CommandsScreen;
use Butschster\Commander\Feature\CommandBrowser\Service\CommandDiscovery;
use Butschster\Commander\Feature\CommandBrowser\Service\CommandExecutor;
use Butschster\Commander\Feature\ComposerManager\Screen\ComposerManagerScreen;
use Butschster\Commander\Feature\ComposerManager\Service\ComposerService;
use Butschster\Commander\Feature\FileBrowser\Screen\FileBrowserScreen;
use Butschster\Commander\Feature\FileBrowser\Service\FileSystemService;
use Butschster\Commander\UI\Menu\MenuBuilder;
use Butschster\Commander\UI\Screen\ScreenRegistry;
use Butschster\Commander\UI\Theme\ColorScheme;
use Butschster\Commander\UI\Theme\MidnightTheme;
use Symfony\Component\Console\Application as SymfonyApplication;

// Create Symfony Console Application
$symfonyApp = new SymfonyApplication('My Console Application', '1.0.0');

// Add more commands here as needed
// $symfonyApp->add(new AnotherCommand());

// Initialize theme
ColorScheme::applyTheme(new MidnightTheme());
// ColorScheme::applyTheme(new DarkTheme());

// Create and run the MC-style application
try {
    $app = new Application();
    $app->setTargetFps(30);

    // 1. Create screen registry
    $registry = new ScreenRegistry();
    $app->setScreenRegistry($registry);

    // 2. Create and register screen instances
    //    Each screen now self-registers with its metadata
    $commandDiscovery = new CommandDiscovery($symfonyApp);
    $commandExecutor = new CommandExecutor($symfonyApp);
    $fileSystem = new FileSystemService();

    $registry->register(new CommandsScreen($commandDiscovery, $commandExecutor));
    $registry->register(new FileBrowserScreen($fileSystem, $app->getScreenManager(), getcwd()));
    $registry->register(new ComposerManagerScreen(new ComposerService(__DIR__)));

    // 3. Build menu system from registered screens
    //    Automatically groups screens by category and assigns F-keys
    $menuBuilder = new MenuBuilder($registry);
    $app->setMenuSystem($menuBuilder->build());

    // 4. Start with first registered screen
    $firstScreen = $registry->getScreen('command_browser');
    if ($firstScreen === null) {
        throw new \RuntimeException('No screens registered');
    }

    $app->run($firstScreen);
} catch (\Throwable $e) {
    echo (new ExceptionRenderer())->render($e, true);

    exit(1);
}
